SchemaVersion: 2018-07-01
Owner: "@mongodb/query"
Description: |
  This workload was created to reproduce various plan selection issues.
  First, it inserts 1000 documents 2 uniformly distributed fields, and creates indexes on
  both fields. Then it runs a pipeline, which will be slow due to incorrect plan selection.

GlobalDefaults:
  Database: &Database planselection
  Collection: &Collection Collection0
  DocumentCount: &docCount 1000
  Nop: &Nop {Nop: true}

Actors:
- Name: InsertData
  Type: Loader
  Threads: 1
  Phases:
  - Repeat: 1
    Database: *Database
    CollectionCount: 1
    Threads: 1
    DocumentCount: *docCount
    BatchSize: 1000
    Indexes:
    - keys: {a: 1}
    - keys: {b: 1}
    Document:
      a: {^Inc: {start: 0}}
      b: {^Cycle: {ofLength: 10, fromGenerator: {^Inc: {start: 0}}}}
  - *Nop
  - *Nop
  - *Nop


- Name: SelectiveIndex
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - Repeat: 500
    Database: *Database
    Operations:
    - OperationMetricsName: SelectiveIndexQuery
      OperationName: RunCommand
      OperationCommand:
        aggregate: *Collection
        pipeline: [
          {$match: {'a': {$eq: 0}, 'b': {$eq: 0}}}
        ]
        cursor: {}
  - *Nop
  - *Nop

- Name: NonSelectiveIndex
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - Repeat: 500
    Database: *Database
    Operations:
    - OperationMetricsName: NonSelectiveIndexQuery
      OperationName: RunCommand
      OperationCommand:
        aggregate: *Collection
        pipeline: [
          {$match: {a: {$gte: 0}}}
        ]
        cursor: {}
  - *Nop

- Name: SortMatch
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - *Nop
  - Repeat: 500
    Database: *Database
    Operations:
    - OperationMetricsName: SortMatchQuery
      OperationName: RunCommand
      OperationCommand:
        aggregate: *Collection
        pipeline: [
          {$sort: {b: 1}}, {$match: {a: {$eq: 0}}}
        ]
        cursor: {}
